name: ci_cd_pipeline
# run-name: ""
on: [push]
jobs:
    run-kfp-cicd:
        runs-on: ubuntu-latest
        permissions:
            id-token: write
            contents: read
        env:
            PROJECT_NUMBER: ${{ secrets.WIF_PROJECT_NUMBER }}
            POOL_ID: ${{ secrets.POOL_ID }}
            PROVIDER_ID: ${{ secrets.PROVIDER_ID }}
            PROJECT_ID: ${{ secrets.PROJECT_ID }}
            SA_NAME: ${{ secrets.SA_NAME }}
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - id: auth
              name: Authenticate Google Cloud
              uses: google-github-actions/auth@v1.1.1
              with:
                workload_identity_provider: 'projects/${{ env.PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ env.POOL_ID }}/providers/${{ env.PROVIDER_ID }}'
                service_account: '${{ env.SA_NAME }}@${{ env.PROJECT_ID }}.iam.gserviceaccount.com'

            - name: Setup python
              uses: actions/setup-python@v4
            
            - name: Install Dependencies
              run: |
                python -m pip install --upgrade pip
                pip install pytest
                cd kf_pipeline
                if [-f requirements.txt]; then pip install -r requirements.txt; fi
            
            - name: Run tests
              run: pytest
            
            - uses: hashicorp/setup-terraform@v2
              with:
                terraform_version: 1.5.3

            - name: Terraform init
              id: tf_init
              run: terraform init
              working-directory: ./terraform
              
            - name: Terraform fmt
              id: tf_fmt
              run: terraform fmt -check
              working-directory: ./terraform
              continue-on-error: true
            
            - name: Terraform validate
              id: tf_val
              run: terraform validate
              working-directory: ./terraform
            
            - name: Terraform plan
              id: tf_plan
              run: terraform plan -no-color
              working-directory: ./terraform
              env:
                TF_VAR_gh_username: ${{ github.actor }}
                TF_VAR_gh_repo_name: ${{ github.repository }}
                TF_VAR_clone_url: ${{ github.repositoryUrl }}
                TF_VAR_gh_token: ${{ secrets.GITHUB_TOKEN }} 
            
            - name: Terraform apply
              id: tf_apply
              run: terraform apply -auto-approve
              working-directory: ./terraform
              env:
                TF_VAR_gh_username: ${{ github.actor }}
                TF_VAR_gh_repo_name: ${{ github.repository }}
                TF_VAR_clone_url: ${{ github.repositoryUrl }}
                TF_VAR_gh_token: ${{ secrets.GITHUB_TOKEN }}